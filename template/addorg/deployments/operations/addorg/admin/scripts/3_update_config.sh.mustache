. ../../../../boilerplate/scripts/common.sh

export _CRYPTO_CONFIG_DIR={{{artifacts.local}}}/{{{artifacts.crypto}}}{{#artifacts.crypto}}/{{/artifacts.crypto}}

{{#orgs.addorg}}
# {{name}}
sudo mkdir -p ${_CRYPTO_CONFIG_DIR}/{{{msp-path}}}/admincerts
sudo mkdir -p ${_CRYPTO_CONFIG_DIR}/{{{msp-path}}}/cacerts
sudo mkdir -p ${_CRYPTO_CONFIG_DIR}/{{{msp-path}}}/tlscacerts
sudo mkdir -p ${_CRYPTO_CONFIG_DIR}/{{{msp-path}}}/users

sudo cp  ${_CRYPTO_CONFIG_DIR}/{{{peers.endpoints.0.cert-path}}}/msp/admincerts/{{domain}}-admin-cert.pem  ${_CRYPTO_CONFIG_DIR}/{{{msp-path}}}/admincerts
sudo cp  ${_CRYPTO_CONFIG_DIR}/{{{peers.endpoints.0.cert-path}}}/assets/ca/{{domain}}-ca-cert.pem  ${_CRYPTO_CONFIG_DIR}/{{{msp-path}}}/cacerts
sudo cp  ${_CRYPTO_CONFIG_DIR}/{{{peers.endpoints.0.cert-path}}}/assets/tls-ca/tls-ca-cert.pem  ${_CRYPTO_CONFIG_DIR}/{{{msp-path}}}/tlscacerts
{{/orgs.addorg}}

# Generate Json
cd ../config; 
export FABRIC_CFG_PATH=${PWD}
${_BIN_DIR}/configtxgen -printOrg {{orgs.addorg.name}} > {{orgs.addorg.name}}.json

# Copy files to the container
cp {{orgs.addorg.name}}.json {{{artifacts.local}}}/addorg

# Copy container script
cp ../scripts/container/config_addorg*.sh {{{artifacts.local}}}/addorg

# Add new org config block and sign block
{{#orgs.peer}}
docker exec cli{{network.host-delimiter}}{{domain}} sh -c "{{{artifacts.docker}}}/addorg/config_addorg_{{script-naming}}.sh"
sleep 2
{{/orgs.peer}}