// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Document Entity: Unit Test query commit by documentId 1`] = `
Object {
  "getCommitsByDocumentId": Array [
    Object {
      "commitId": "20181124064622771:1542385173331",
      "committedAt": "1542385173331",
      "entityName": "document",
      "events": Array [
        Object {
          "type": "DocumentCreated",
        },
        Object {
          "type": "DocumentTitleDefined",
        },
        Object {
          "type": "DocumentReferenceDefined",
        },
        Object {
          "type": "DocumentLoanIdDefined",
        },
        Object {
          "type": "DocumentLinkDefined",
        },
      ],
      "id": "1542385173331",
      "version": 0,
    },
  ],
}
`;

exports[`Document Entity: Unit Test query document by ID 1`] = `
Object {
  "getDocumentById": Object {
    "documentId": "1542385173331",
    "link": "localhost/doc/1542385173331",
    "loan": Object {
      "description": "Loan requested by an undisclosed party to an unknown bank",
      "loanId": "123456",
      "ownerId": "josh@fake.it",
      "reference": "REF123456",
      "status": 0,
      "timestamp": "1542336654365",
    },
    "loanId": "123456",
    "ownerId": "josh@fake.it",
    "reference": "REF1542385173331",
    "status": 0,
    "timestamp": "1543041982770",
    "title": "Top 15+ UK Scholarships for International Students",
  },
}
`;

exports[`Loan Entity: Unit Test federated query loan by ID 1`] = `
Object {
  "getLoanById": Object {
    "description": "Loan requested by an undisclosed party to an unknown bank",
    "documents": Array [
      Object {
        "documentId": "1542385173331",
        "link": "localhost/doc/1542385173331",
        "reference": "REF1542385173331",
        "status": 0,
        "timestamp": "1543041982770",
        "title": "Top 15+ UK Scholarships for International Students",
      },
      Object {
        "documentId": "1542385174331",
        "link": "localhost/doc/1542385174331",
        "reference": "REF1542385174331",
        "status": 0,
        "timestamp": "1543041984770",
        "title": "The Mother of All Invoices",
      },
    ],
    "loanId": "123456",
    "ownerId": "josh@fake.it",
    "reference": "REF123456",
    "status": 0,
    "timestamp": "1542336654365",
  },
}
`;

exports[`Loan Entity: Unit Test query commits by loanId 1`] = `
Object {
  "getCommitsByLoanId": Array [
    Object {
      "commitId": "20181116025054374:123456",
      "committedAt": "1542336654374",
      "entityName": "loan",
      "events": Array [
        Object {
          "type": "LoanApplied",
        },
        Object {
          "type": "LoanReferenceDefined",
        },
        Object {
          "type": "LoanDescriptionDefined",
        },
      ],
      "id": "123456",
      "version": 0,
    },
  ],
}
`;

exports[`LoanDetails: Unit Test federated query loan details by ID 1`] = `
Object {
  "getLoanDetailsById": Object {
    "approvedAmt": null,
    "comment": null,
    "contact": Object {
      "email": "josh@fake.it",
      "name": "Josh",
      "phone": "555-01234",
      "salutation": "Mr.",
      "title": "Owner",
    },
    "currency": "CNY",
    "loan": Object {
      "description": "Loan requested by an undisclosed party to an unknown bank",
      "ownerId": "josh@fake.it",
      "reference": "REF123456",
      "status": 0,
      "timestamp": "1542336654365",
    },
    "loanId": "123456",
    "loanType": "Post-shipment",
    "requestedAmt": 900000,
    "requester": Object {
      "name": "Josh's Tailor",
      "registration": "BR00001",
      "type": "Textile",
    },
    "startDate": "1542336644365",
    "tenor": 90,
    "timestamp": "1542336654365",
  },
}
`;

exports[`User Entity: Unit Test query commits by userId 1`] = `
Object {
  "getCommitsByUserId": Array [
    Object {
      "commitId": "20181114163145704:josh@fake.it",
      "committedAt": "1542213105704",
      "entityName": "user",
      "events": Array [
        Object {
          "type": "UserCreated",
        },
      ],
      "id": "josh@fake.it",
      "version": 0,
    },
  ],
}
`;

exports[`User Entity: Unit Test query paginated user 1`] = `
Object {
  "getPaginatedUser": Object {
    "entities": Array [
      Object {
        "name": "Josh",
        "userId": "josh@fake.it",
      },
      Object {
        "name": "Pete",
        "userId": "pete@fake.it",
      },
    ],
    "hasMore": false,
    "total": 2,
  },
}
`;

exports[`User Entity: Unit Test query user by ID 1`] = `
Object {
  "getUserById": Object {
    "mergedUserIds": Array [
      "josh@fake.it",
    ],
    "name": "Josh",
    "userId": "josh@fake.it",
  },
}
`;
