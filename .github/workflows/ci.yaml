on:
#  push:
#    branches: [ master ]
  pull_request:
    branches: [ master ]

name: CI

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Setup Node.js for use with action
        uses: actions/setup-node@v1.1.0
        with:
          node-version: '12.x'
          version: '12.x'
      - name: yarn install
        run: yarn install --frozen-lockfile
      - name: lint auth, chaincode, fabric-cqrs, operator, gateway-lib, proxy
        run: yarn lint:lib
      - name: lint gw-org*, model-*, ui-account
        run: yarn lint:app
      - name: Run tsc for all packages
        run: yarn tsc:all
      - name: build images for proxy, auth-server, ui-account
        run: cd /home/runner/work/fabric-es/fabric-es/deployments/dev-net && ./dn-build.auth.sh && ./dn-build.ui-control.sh
      - name: deploy base 2-org fabric v2.1 network with proxy, postgres, redis, auth
        run: cd /home/runner/work/fabric-es/fabric-es/deployments/dev-net && ./dn-run.2-db-red-auth.sh
      - name: Run unit tests for chaincode, operator, fabric-cqrs, model-*, auth, gateway-lib
        run: sudo yarn unit-test
        env:
          CI: true
      - run: sudo rm -rf /home/runner/work/fabric-es/fabric-es/deployments/dev-net/artifacts
