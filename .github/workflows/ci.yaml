on:
#  push:
#    branches: [ master ]
  pull_request:
    branches: [ master ]

name: CI

env:
  NODE_MODULE_VERSION: 57

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Setup Node.js for use with action
        uses: actions/setup-node@v1.1.0
        with:
          node-version: '10.x'
          version: '10.x'
      - name: yarn install
        run: yarn install --frozen-lockfile --ignore-engines
      - run: npm rebuild grpc --target=12.0.0 --target_platform=linux --target_arch=x64 --target_libc=glibc
      - run: yarn lint:lib
      - run: yarn lint:app
      - name: Run tsc for all packages
        run: yarn tsc:all
      - name: deploy base fabric v2 network only
        run: cd /home/runner/work/fabric-es/fabric-es/deployments/dev-net && ./dn-run.2.sh
      - name: Run unit tests for chaincode, operator, fabric-cqrs, model-*. (auth and gateway-lib is excluded.)
        run: sudo yarn unit-test
        env:
          CI: true
      - run: sudo rm -rf /home/runner/work/fabric-es/fabric-es/deployments/dev-net/artifacts
