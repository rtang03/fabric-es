name: Create Release
on:
  push:
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
env:
  GKE_PROJECT: fdi-test-net
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-central1-a
  GKE_CLUSTER: test-net-cluster-1
  AUTH_IMAGE: fabric-es/auth-server
  GW_ORG1_IMAGE: fabric-es/gw-org1
  REGISTRY_HOSTNAME: gcr.io
  DEPLOYMENT_NAME: gke-test

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Setup Node.js for use with action
        uses: actions/setup-node@v1.1.0
        with:
          version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@fabric-es'
      - run: yarn install --frozen-lockfile
      - name: Run tsc for all packages
        run: yarn tsc:all
      - name: Build tester image
        run: cd /home/runner/work/fabric-es/fabric-es/deployments/dev-net && ./dn-build.tester.sh
      - name: Build auth image
        run: cd /home/runner/work/fabric-es/fabric-es/deployments/dev-net && ./dn-build.auth.sh
      - name: Build relay image
        run: cd /home/runner/work/fabric-es/fabric-es/deployments/dev-net && ./dn-build.relay.sh
      - name: Build ui images
        run: cd /home/runner/work/fabric-es/fabric-es/deployments/dev-net && ./dn-build.ui-control.sh org1 org2
      - name: Build org1 org2 images
        run: cd /home/runner/work/fabric-es/fabric-es/deployments/dev-net && ./dn-build.gw.sh org1 org2
      - name: Run multi-org integration test
        run: cd /home/runner/work/fabric-es/fabric-es/deployments/dev-net && ./dn-test.gw-2.sh
# Comment out the step to send docker images to Google Registry.
# Below step needs re-test, if uncomment
#      - name: Setup Google account
#        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
#        with:
#          version: '270.0.0'
#          service_account_email: ${{ secrets.GKE_EMAIL }}
#          service_account_key: ${{ secrets.GKE_KEY }}
#      - name: Authenticate Google account
#        run: gcloud auth configure-docker
#      - name: Rename image tag for auth-server
#        run: |
#          TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\/\(.*\)/\1/') && \
#          docker tag fabric-es/auth-server:1.0 "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/auth-server:"$TAG"
#      - name: Publish auth-server image
#        run: |
#          TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\/\(.*\)/\1/') && \
#          docker push "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/auth-server:"$TAG"
#      - name: Rename image tag for gw-org1
#        run: |
#          TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\/\(.*\)/\1/') && \
#          docker tag fabric-es/gw-org1:1.0  "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/gw-org1:"$TAG"
#      - name: Publish gw-org1 image
#        run: |
#          TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\/\(.*\)/\1/') && \
#          docker push "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/gw-org1:"$TAG"
      - name: Create Release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRAFT_RELEASE: "true"
          PRE_RELEASE: "true"
          CHANGELOG_FILE: "CHANGELOG.md"
          ALLOW_EMPTY_CHANGELOG: "false"
          ALLOW_TAG_PREFIX: "true"
      - name: Cleanup artifacts
        run: sudo rm -rf /home/runner/work/fabric-es/fabric-es/deployments/dev-net/artifacts
      - name: Cleanup data volume
        run: sudo rm -rf /home/runner/work/fabric-es/fabric-es/deployments/dev-net/volume
#  This step will only publish to the same repo. However, our use case may need to publish other registry.
#  So disable it for now.
#      - name: Publish Github Packages
#        run: yarn run publish:lib
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
