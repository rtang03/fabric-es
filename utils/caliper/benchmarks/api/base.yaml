---
test:
  name: Eventstore
  description: This is a tps based benchmark targetting using the `evenstore` NodeJS chaincode contract that is interacted with via
    a Fabric-SDK-Node Gateway. Each test round flexes a single chaincode method.
  clients:
    type: local
    number: 1
  rounds:
    - label: queryByEntityName of single record
      description: Test evaluateTransaction() against `eventstore:queryByEntityName`, which returns single record from `instantiate`. This represents the fastest possible round trip time for an evaluateTransaction() method.
      chaincodeId: eventstore
      txDuration:
        - 10
      rateControl:
        - type: fixed-rate
          opts:
            tps: 30
      callback: dist/queryByEntityName.js
    - label: queryByEntityId of single record
      description: Test evaluateTransaction() against `eventstore:queryByEntityName`, which returns single record from `instantiate`. This represents the fastest possible round trip time for an evaluateTransaction() method.
      chaincodeId: eventstore
      txDuration:
        - 10
      rateControl:
        - type: fixed-backlog
          opts:
            unfinished_per_client: 5
      callback: dist/queryByEntityId.js
    - label: createCommit - 100
      description: Test submitTransaction() against `eventstore:createCommit`. This inserts a commit of size 100 bytes into the World State database.
      chaincodeId: eventstore
      txDuration:
        - 10
      rateControl:
        - type: fixed-backlog
          opts:
            unfinished_per_client: 50
      arguments:
        bytesize: 1000
      callback: dist/createCommit.js
monitor:
  type:
    - docker
    - process
  docker:
    name:
      - dev-peer0.org2.example.com-eventstore-0
      - dev-peer1.org2.example.com-eventstore-0
      - dev-peer0.org1.example.com-eventstore-0
      - dev-peer1.org1.example.com-eventstore-0
      - peer0.org2.example.com
      - peer1.org2.example.com
      - peer0.org1.example.com
      - peer1.org1.example.com
      - orderer.example.com
  process:
    - command: node
      arguments: local-client.js
      multiOutput: avg
  interval: 1
  observer:
    type: local
    interval: 1

