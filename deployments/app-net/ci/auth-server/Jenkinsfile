pipeline {

    environment {
        registryCredential = "docker-registry-login"
        registryUrl = "https://build:5000"
        nodeImage = "build:5000/node8-build"

        yarnInstall = "yarn install --ignore-engines"
        yarnBuild = "yarn build:auth"

        tag = "${BUILD_TIMESTAMP}-${BUILD_NUMBER}"
        imgName = "build:5000/auth-server"
        dockerfile = "auth-server.dockerfile"

        dockerhubCredential = "dockerhub-login"
        imgNameHub = "hktfp5/auth-server"
    }

    agent none

    stages {
        stage("Yarn Build") {
            agent {
                docker {
                    image nodeImage
                    args '-p 3000:3000'
                    registryUrl registryUrl
                    registryCredentialsId registryCredential
                }
            }
            steps {
                sh yarnInstall
                sh yarnBuild
            }
        }
        stage("Docker Build") {
            agent { label "master" }
            steps {
                sh "docker build -t ${imgName}:${tag} -f ${dockerfile} ."
            }
        }
        stage("Docker Push") {
            agent { label "master" }
            steps {
                sh "docker tag ${imgName}:${tag} ${imgName}:latest"
                withCredentials([usernamePassword(credentialsId: registryCredential, passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
                    sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword} build:5000"
                    sh "docker push ${imgName}:${tag}"                   
                    sh "docker push ${imgName}:latest"
                }
            }
        }
        stage("Dockerhub Push") {
            agent { label "master" }
            steps {
                sh "docker tag ${imgName}:${tag} ${imgNameHub}:${tag}"
                sh "docker tag ${imgName}:${tag} ${imgNameHub}:latest"
                withCredentials([usernamePassword(credentialsId: dockerhubCredential, passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
                    sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
                    sh "docker push ${imgNameHub}:${tag}"
                    sh "docker push ${imgNameHub}:latest"
                }
            }
        }
    }
}