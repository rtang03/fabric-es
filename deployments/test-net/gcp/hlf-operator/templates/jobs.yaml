apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "hlf-operator.fullname" . }}
  labels:
  {{- include "labels.standard" . | nindent 4 }}
spec:
  backoffLimit: 0
  parallelism: 1
  completions: 1
  template:
    spec:
      restartPolicy: Never
      volumes:
        - name: fabricfiles
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.pvcName }}
        - name: setup-script
          configMap:
            name: {{ .Values.global.config.setupsh }}
            defaultMode: 0777
        - name: core-yaml
          configMap:
            name: {{ include "hlf-operator.fullname" . }}--core
        - name: org0-tls-ca-cert
          secret:
            secretName: {{ .Values.secret.tlscacert }}
        - name: channel-tx
          secret:
            secretName: {{ .Values.secret.channeltx }}
      containers:
        - name: hlf-operator
          image: library/alpine:3.12.0
          command: ["sh", "-c"]
          args:
            - |-
              . /script/setup.sh
              apk update
              apk upgrade
              apk --no-cache add libc6-compat libstdc++
              echo "Fetch block to see if channel has already been created..."
              ./bin/peer version
              {{- if .Values.tasks.create_channel.enabled}}
              set -x
              ${BIN}/peer channel fetch 0 -c ${CHANNEL_NAME} --tls --cafile ${ORDERER_CA} -o ${ORDERER_URL} {{ .Values.global.workingDir }}/crypto-config/channel-artifacts/${CHANNEL_NAME}.block
              set +x
              if [ -f {{ .Values.global.workingDir }}/crypto-config/channel-artifacts/${CHANNEL_NAME}.block ]
              then
                echo "Channel ${CHANNEL_NAME} is already created."
              else
                echo "Creating Channel ${CHANNEL_NAME}"
                set -x
                ${BIN}/peer channel create -o ${ORDERER_URL} -c ${CHANNEL_NAME} \
                  -f {{ .Values.global.workingDir }}/crypto-config/channel-artifacts/channeltx/channel.tx \
                  --outputBlock {{ .Values.global.workingDir }}/crypto-config/channel-artifacts/${CHANNEL_NAME}.block
                  --tls ${CORE_PEER_TLS_ENABLED} --cafile ${ORDERER_CA} >& ./crypto-config/channel-artifacts/log-createchannel.txt
                res=$?
                set +x
                printMessage "create channel" $res
              fi
              {{- end }}
              {{- if .Values.tasks.join_channel.enabled }}
              set -x
              ${BIN}/peer channel join -b {{ .Values.global.workingDir }}/crypto-config/channel-artifacts/${CHANNEL_NAME}.block >& ./crypto-config/channel-artifacts/log-joinchannel.txt
              res=$?
              set +x
              printMessage "join channel" $res
              ${BIN}/peer channel getinfo -c ${CHANNEL_NAME}
              {{- end }}

              sleep 1h
          workingDir: {{ .Values.global.workingDir }}
          envFrom:
            - configMapRef:
                name: {{ include "hlf-operator.fullname" . }}--cli
          volumeMounts:
            - mountPath: /var/hyperledger
              name: fabricfiles
            - mountPath: /etc/hyperledger
              name: core-yaml
            - name: setup-script
              mountPath: /script/setup.sh
              subPath: setup.sh
            - name: channel-tx
              mountPath: {{ .Values.global.workingDir }}/crypto-config/channel-artifacts/channeltx
            - name: org0-tls-ca-cert
              mountPath: {{ .Values.global.workingDir }}/crypto-config/channel-artifacts/org0-tls-ca-cert
