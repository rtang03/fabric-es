## Default values for hlf-ca for tlsca0
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

mspId: Org0MSP
## CA Admin Username
caAdmin: admin
## CA Admin password (set to 24 random characters by default)
caAdminPW: adminPW
## Name of CA, stored in FABRIC_CA_SERVER_CA_NAME (and the configMap "--config", if deploying a Root CA)
caName: org1-ca

image:
  repository: hyperledger/fabric-ca
  tag: 1.4.7
  pullPolicy: IfNotPresent

service:
  ## Cluster IP or LoadBalancer
  type: ClusterIP
  port: 7054

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # certmanager.k8s.io/cluster-issuer: "letsencrypt-staging"
  path: /
  hosts:
    - tlsca0
  tls: []
    # secretName is {{ Release.Name }}-tls. For org0, it must be tlsca0-tls
#    - secretName: "tlsca0-tls"
#      hosts:
#        - tlsca0

persistence:
  enabled: true
  annotations: {}
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: ""
  # accessMode: ReadWriteOnce
  # size: 1Gi
  # existingClaim: "pvc-org0"

##################################
## Further configuration options #
##################################

##
## Fabric CA Database
## By default an sqlite3 in-memory database is used
## To install a 'postgresql' or 'mysql' database, enable and configure the configuration below
##################################
##
db:
  # SSL authentication
  # Supported values are: "disable", "require", "verify-ca" and "verify-full".
  # https://github.com/hyperledger/fabric-ca/blob/master/docs/source/users-guide.rst
  ssl: disable

##
## External Database configuration (MySQL or PostgresSQL installed on/off Kubernetes)
##
externalDatabase:
  type: postgres
  host: admin0-postgresql-0
  port: 5432
  database: tls_ca_db
  username: postgres
  password: password

## Settings used in configMap "--config"
config:
  fabricCaHome: /var/hyperledger/crypto-config/Org0MSP/fabric-ca
  fabricCaClientHome: /var/hyperledger/crypto-config/Org0MSP/client
  fabricCaClientTlsCertfiles: /var/hyperledger/crypto-config/Org0MSP/fabric-ca/ca-cert.pem
  timezone: "Asia/Hong Kong"
  hlfToolsVersion: 1.4.7
  ## Mount the TLS certificate & key to disk?
  mountTLS: false
  ## Enable debug logging in ca Server configuration file
  debug: false
  ## CSR pathlength in ca Server configuration file
  csr:
    ca:
      pathlength: 1
    names:
      c: US
      st: "North Carolina"
      o: Hyperledger
      ou: Fabric
      l:
  ## "intermediate" is only specified for Intermediate CA's
  # intermediate:
  #   parent:
  #     chart: parent-ca
  #     url: parent-ca.example.com
  #     port: 7054
  ## Affiliations used in ca Server configuration file
  # org1: []

resources: {}
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
  ## Suggested antiAffinity, as each CA should be on a separate Node for resilience
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - topologyKey: "kubernetes.io/hostname"
  #       labelSelector:
#         matchLabels:
#           app: hlf-ca
