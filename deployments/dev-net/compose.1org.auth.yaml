version: '3'
services:
  postgres:
    container_name: postgres
    image: postgres:9.6.17-alpine
    environment:
      - POSTGRES_PASSWORD=docker
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./scripts/createdb.sql:/docker-entrypoint-initdb.d/1-createdb.sql
    command: postgres
    ports:
      - 5432:5432
  redis:
    container_name: redis
    image: redis:5.0.9-alpine
    volumes:
      - ./volume/redis-data:/data
# custom configuration. will require if AUTH is set
#          - ./volume/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
  proxy:
    image: fabric-es/proxy:1.0
    container_name: proxy
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - AUTH_HOST=http://auth:8080
      - APP_HOST=http://ui-account:3000
    ports:
      - 8080:8080
  auth:
    image: fabric-es/auth-server:1.0
    container_name: auth
    environment:
      - PORT=8080
      - TYPEORM_HOST=postgres
      - TYPEORM_USERNAME=postgres
      - TYPEORM_PASSWORD=docker
      - TYPEORM_DATABASE=auth_db
      - TYPEORM_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=secret
      - JWT_EXP_IN_SECOND=3600
      - ORG_ADMIN_ID=admin-org1.net
      - ORG_ADMIN_SECRET=admin-org1.netPW
      - ORG_ADMIN_EMAIL=admin@org.net
      - CLIENT_APPLICATION_NAME=root_client
      - CLIENT_SECRET=password
    depends_on:
      - redis
      - postgres
#  ui-account:
#    image: fabric-es/ui-account:1.0
#    container_name: ui-account
#    environment:
#      - PORT=3000
#      - AUTH_HOST=http://auth:8080
